version: "3.8"

services:
  web:
    build:
      context: ..
      dockerfile: ./sow_frontend/Dockerfile
    volumes:
      - ../sow_frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    command: npm start
    networks:
      - sow_network

  nginx:
    build:
      context: ..
      dockerfile: ./sow_frontend/Dockerfile.nginx
    volumes:
      - ../sow_frontend/public:/var/www/html
      - ../sow_frontend/certs:/etc/letsencrypt/live/seaofwisdom.xyz
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
      - library_srv
    networks:
      - sow_network

  jwt_srv:
    image: s3aofwisd0m/sow-library:sow-jwt
    container_name: jwt_srv
    env_file:
      - .env
    ports:
      - "5304:5304"
    depends_on:
      - mongodb
      - postgresdb
    networks:
      - sow_network

  library_srv:
    image: s3aofwisd0m/sow-library:sow-library
    container_name: library_srv
    env_file:
      - .env
    ports:
      - "8060:8060"
      - "8005:8005"
    depends_on:
      - mongodb
      - postgresdb
    networks:
      - sow_network

  contractor_srv:
    image: s3aofwisd0m/sow-library:sow-contractor
    container_name: contractor_srv
    env_file:
      - .env
    ports:
      - "5305:5305"
    depends_on:
      - redisdb
    networks:
      - sow_network

  ocr_srv:
    image: s3aofwisd0m/sow-library:sow-ocr
    container_name: ocr_srv
    volumes:
      - ./voltaic-mantra-387401-0594c8645e9a.json:/voltaic-mantra-387401-0594c8645e9a.json
    ports:
      - "50051:50051"
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - sow_network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    env_file:
      - .env
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: --auth
    networks:
      - sow_network

  postgresdb:
    image: postgres
    container_name: postgresdb
    restart: always
    env_file:
      - .env
    ports:
      - "7575:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    volumes:
      - postgresdb_data:/var/lib/postgresql/data
    networks:
      - sow_network

  redisdb:
    image: "redis:alpine"
    container_name: redisdb
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redisdb_data:/data/redis
    networks:
      - sow_network

volumes:
  mongodb_data:
  postgresdb_data:
  redisdb_data:

networks:
  sow_network:
    external: true
